<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="ComplexCpp_8h" kind="file" language="C++">
    <compoundname>ComplexCpp.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includedby refid="ComplexCpp_8cpp" local="yes">/home/mitch_gerhardt/Documents/AutoDoc_Sphinx/src/ComplexCpp.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>string</label>
      </node>
      <node id="1">
        <label>/home/mitch_gerhardt/Documents/AutoDoc_Sphinx/src/ComplexCpp.h</label>
        <link refid="ComplexCpp_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <innerclass refid="classComplex__Cpp" prot="public">Complex_Cpp</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::string;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::ostream;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>COMPLEX_CPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COMPLEX_CPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="classComplex__Cpp" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classComplex__Cpp" kindref="compound">Complex_Cpp</ref><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>real;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>imaginary;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="classComplex__Cpp_1abae915753734a694363f833b4b4f4108" kindref="member">Complex_Cpp</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="classComplex__Cpp_1abae915753734a694363f833b4b4f4108" kindref="member">Complex_Cpp</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>real,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>imaginary);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classComplex__Cpp_1a901f64665cfa36538d2298832ce8f194" kindref="member">getReal</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classComplex__Cpp_1ace9eaa01d3b625363aad28db8f9577e7" kindref="member">getImaginary</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classComplex__Cpp_1a68204641350bd4952a5f497d4994dc8e" kindref="member">setReal</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newReal);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classComplex__Cpp_1ae0db90c465a5e115e44954ccde738ba4" kindref="member">setImaginary</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newImaginary);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classComplex__Cpp_1a1aaf531ea95a6a0419d6612bf61f899e" kindref="member">equal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classComplex__Cpp" kindref="compound">Complex_Cpp</ref><sp/>&amp;c)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="classComplex__Cpp" kindref="compound">Complex_Cpp</ref><sp/><ref refid="classComplex__Cpp_1a15daee912a0535674e5a4cd2a64dcdea" kindref="member">add</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classComplex__Cpp" kindref="compound">Complex_Cpp</ref><sp/>&amp;c)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="classComplex__Cpp" kindref="compound">Complex_Cpp</ref><sp/><ref refid="classComplex__Cpp_1a553415395ee6679eae6965e04a15aff2" kindref="member">multiply</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classComplex__Cpp" kindref="compound">Complex_Cpp</ref><sp/>&amp;c)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classComplex__Cpp_1a52b2903df2b313e530c5d748e9e56066" kindref="member">output</ref>(std::ostream<sp/>&amp;out)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/mitch_gerhardt/Documents/AutoDoc_Sphinx/src/ComplexCpp.h"/>
  </compounddef>
</doxygen>
